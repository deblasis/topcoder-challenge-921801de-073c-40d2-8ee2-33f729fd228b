syntax = "proto3";

package deblasis.state.v1;

option go_package = "deblasis.net/space-traffic-control/gen/proto/go/centralcommand_dbsvc/proto/v1;centralcommand_dbsvc_v1";

service CentralCommandDBService {
  rpc CreateShip (CreateShipRequest) returns (CreateShipResponse) {}
  rpc CreateStation (CreateStationRequest) returns (CreateStationResponse) {}
  
  rpc GetAllShips (GetAllShipsRequest) returns (GetAllShipsResponse) {}
  rpc GetAllStations (GetAllStationsRequest) returns (GetAllStationsResponse) {}

  rpc GetNextAvailableDockingStation (GetNextAvailableDockingStationRequest) returns (GetNextAvailableDockingStationResponse) {}
}

message Dock {
  string id = 1;
  string station_id =2;
  int64 num_docking_ports = 3;
  int64 occupied = 4;
  float weight = 5;
}

message Station {
  string id = 1;
  float capacity = 2;
  float used_capacity =3;

  repeated Dock docks = 4;
}

message Ship {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_INFLIGHT=1;
    STATUS_DOCKED=2;
  }
  string id = 1;
  //@gotags: model:"-"
  Status status = 2; 
  float weight = 3;
}

message NextAvailableDockingStation {
  string dock_id = 1;
  string station_id = 2;
  float available_capacity = 3;
  int64 available_docks_at_station =4;
  int64 seconds_until_available = 5;
}

message CreateShipRequest {
  Ship ship = 1;
}
message CreateShipResponse {
  Ship ship = 1;
  string error = 2;
}


message GetAllShipsRequest {
}
message GetAllShipsResponse {
  repeated Ship ships = 1;
  string error = 2;
}

message CreateStationRequest {
  Station station = 1;
}
message CreateStationResponse {
  Station station = 1;
  string error = 2;
}
message GetAllStationsRequest {
}
message GetAllStationsResponse {
  repeated Station stations = 1;
  string error = 2;
}


message GetNextAvailableDockingStationRequest {
  string ship_id = 1;
}
message GetNextAvailableDockingStationResponse {
  NextAvailableDockingStation next_available_docking_station = 1;  
  string error = 2;
}