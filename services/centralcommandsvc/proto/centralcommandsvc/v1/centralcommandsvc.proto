syntax = "proto3";

package centralcommandsvc.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "deblasis.net/space-traffic-control/gen/proto/go/centralcommandsvc/proto/v1;centralcommandsvc_v1";

service CentralCommandService {
  rpc RegisterStation(RegisterStationRequest) returns (RegisterStationResponse) {
    option (google.api.http) = {
      post: "/centcom/station/register"
      body: "station"
    };
  }
  rpc RegisterShip(RegisterShipRequest) returns (RegisterShipResponse) {
    option (google.api.http) = {
      post: "/centcom/ship/register"
      body: "ship"
    };    
  }

  rpc GetAllShips (GetAllShipsRequest) returns (GetAllShipsResponse) {
    option (google.api.http) = {
      get: "/centcom/ship/all"
    };    
  }
  rpc GetAllStations (GetAllStationsRequest) returns (GetAllStationsResponse) {
    option (google.api.http) = {
      get: "/centcom/station/all"
    };    
  }
}


message Dock {
  string id = 1;
  string station_id =2;
  int64 num_docking_ports = 3[(google.api.field_behavior) = REQUIRED];
  int64 occupied = 4;
  float weight = 5;
}


message Station {
  string id = 1;
  float capacity = 2[(google.api.field_behavior) = REQUIRED];
  float used_capacity =3;

  repeated Dock docks = 4[(google.api.field_behavior) = REQUIRED];
}

message Ship {
  string id = 1;
  //@gotags: model:"-"
  string status = 2; 
  float weight = 3[(google.api.field_behavior) = REQUIRED];
}


message RegisterStationRequest {
  Station station = 1;
}
message RegisterStationResponse {
  Station station = 1;
  string error = 2;
}

message RegisterShipRequest {
  Ship ship = 1;
}
message RegisterShipResponse {
  Ship ship = 1;
  string error = 2;
}


message GetAllShipsRequest {
}
message GetAllShipsResponse {
  repeated Ship ships = 1;
  string error = 2;
}
message GetAllStationsRequest {
}
message GetAllStationsResponse {
  repeated Station stations = 1;
  string error = 2;
}
