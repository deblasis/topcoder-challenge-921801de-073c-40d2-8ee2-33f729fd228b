syntax = "proto3";

package deblasis.v1;

import "google/protobuf/empty.proto";
import "google/api/httpbody.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "deblasis.net/space-traffic-control/gen/proto/go/centralcommandsvc/proto/v1;centralcommandsvc_v1";

service CentralCommandService {
  rpc RegisterStation(RegisterStationRequest) returns (google.api.HttpBody) {
    option (google.api.http) = {
      post: "/centcom/station/register"
      body: "*"
      //this would be the correct way to return the struct but we want a custom serialization so it has to be HttpBody
      //response_body: "station"
    };
  }
  rpc RegisterShip(RegisterShipRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/centcom/ship/register"
      body: "*"
      //this would be the correct way to return the struct but we want a custom serialization so it has to be HttpBody
      //response_body: "ship"
    };    
  }

  rpc GetAllShips (GetAllShipsRequest) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/centcom/ship/all"
      //this would be the correct way to promote the field to the body but since it's a repeated field, it's not allowed.
      //response_body: "ships"
    };    
  }
  rpc GetAllStations (GetAllStationsRequest) returns (google.api.HttpBody) {
    option (google.api.http) = {
      get: "/centcom/station/all"
      //this would be the correct way to promote the field to the body but since it's a repeated field, it's not allowed.
      //response_body: "stations"
    };    
  }

  rpc GetNextAvailableDockingStation (GetNextAvailableDockingStationRequest) returns (GetNextAvailableDockingStationResponse) {}
  rpc RegisterShipLanding (RegisterShipLandingRequest) returns (RegisterShipLandingResponse) {}

}


message Dock {
  string id = 1;
  //@gotags: json:"-"
  string station_id =2;
  int64 num_docking_ports = 3[(google.api.field_behavior) = REQUIRED];
  int64 occupied = 4;
  float weight = 5;
}


message Station {
  string id = 1;
  float capacity = 2[(google.api.field_behavior) = REQUIRED];
  float used_capacity =3;

  repeated Dock docks = 4[(google.api.field_behavior) = REQUIRED];
}

message Ship {
  string id = 1;
  //@gotags: model:"-"
  string status = 2; 
  float weight = 3[(google.api.field_behavior) = REQUIRED];
}

message NextAvailableDockingStation {
  string dock_id = 1;
  string station_id = 2;
  float ship_weight = 3;
  float available_capacity = 4;
  int64 available_docks_at_station =5;
  int64 seconds_until_next_available = 6;
}

message DockSpec {
  int64 num_docking_ports = 1[(google.api.field_behavior) = REQUIRED];
}
message RegisterStationRequest {
  float capacity = 1[(google.api.field_behavior) = REQUIRED];
  repeated DockSpec docks = 2[(google.api.field_behavior) = REQUIRED];
}
message RegisterStationResponse {
  Station station = 1;
  string error = 2;
}

message RegisterShipRequest {
  float weight = 1[(google.api.field_behavior) = REQUIRED];
}
message RegisterShipResponse {
  Ship ship = 1;
  string error = 2;
}


message GetAllShipsRequest {
}
message GetAllShipsResponse {
  repeated Ship ships = 1;
  string error = 2;
}
message GetAllStationsRequest {
}
message GetAllStationsResponse {
  repeated Station stations = 1;
  string error = 2;
}

message GetNextAvailableDockingStationRequest {
  //@gotags: validate:"uuid4"
  string ship_id = 1;
}
message GetNextAvailableDockingStationResponse {
  NextAvailableDockingStation next_available_docking_station = 1;  
  string error = 2;
}

message RegisterShipLandingRequest {
  //@gotags: validate:"uuid4,required"
  string ship_id = 1;    
  //@gotags: validate:"uuid4,required"
  string dock_id = 2;
  //@gotags: validate:"required"
  int64 duration = 3;
}

message RegisterShipLandingResponse {
  string error = 1;
}
