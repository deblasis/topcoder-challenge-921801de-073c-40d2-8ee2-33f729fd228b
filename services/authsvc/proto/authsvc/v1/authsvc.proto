syntax = "proto3";

package deblasis.v1;

import "v1/error.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "deblasis.net/space-traffic-control/gen/proto/go/authsvc/proto/v1;authsvc_v1";


service AuthService {
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  };
  rpc Signup(SignupRequest) returns (SignupResponse) {
    option (google.api.http) = {
      post: "/user/signup"
      body: "*"
    };
  };



}

message LoginRequest {
  //@gotags: validate:"required,notblank"
  string username = 1[(google.api.field_behavior) = REQUIRED];
  //@gotags: validate:"required,notblank"
  string password = 2[(google.api.field_behavior) = REQUIRED];
}

message LoginResponse {
  //@gotags: json:"token,omitempty"
  Token token = 1;
  //@gotags: json:"error,omitempty" model:"-"
  deblasis.common.v1.Error error = 2;
}

message SignupRequest {
  //@gotags: validate:"required,notblank"
  string username = 1[(google.api.field_behavior) = REQUIRED]; 
  //@gotags: validate:"required,notblank"
  string password = 2[(google.api.field_behavior) = REQUIRED];
  //@gotags: validate:"required,oneof=Ship Station Command"
  string role = 3[(google.api.field_behavior) = REQUIRED];
}

message SignupResponse {
  //@gotags: json:"token,omitempty"
  Token token = 1;
  //@gotags: json:"error,omitempty" model:"-"
  deblasis.common.v1.Error error = 2;
}

message CheckTokenRequest {
  string token = 1[(google.api.field_behavior) = REQUIRED];
}

message CheckTokenResponse {
  TokenPayload token_payload = 1;
  //@gotags: json:"error,omitempty" model:"-"
  deblasis.common.v1.Error error = 2;
}

message Token {
  //@gotags: json:"token,omitempty"
  string token = 1;
  //@gotags: json:"expires_at,omitempty"
  int64 expires_at = 2;
}

message TokenPayload {
  string token_id = 1;
  string user_id = 2;
  string username = 3;
  string role = 4;
}
