syntax = "proto3";

package authsvc.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

option go_package = "deblasis.net/space-traffic-control/gen/proto/go/authsvc/proto/v1;authsvc_v1";


service AuthService {
  rpc ServiceStatus (ServiceStatusRequest) returns (ServiceStatusResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/auth/login"
      body: "*"
    };
  };
  rpc Signup(SignupRequest) returns (SignupResponse) {
    option (google.api.http) = {
      post: "/user/signup"
      body: "*"
    };
  };

}

message LoginRequest {
  //@gotags: validate:"required,notblank"
  string username = 1[(google.api.field_behavior) = REQUIRED];
  //@gotags: validate:"required,notblank"
  string password = 2[(google.api.field_behavior) = REQUIRED];
}

message LoginResponse {
  Token token = 1;
  string error = 2;
}

message SignupRequest {
  //@gotags: validate:"required,notblank"
  string username = 1[(google.api.field_behavior) = REQUIRED]; 
  //@gotags: validate:"required,notblank"
  string password = 2[(google.api.field_behavior) = REQUIRED];
  //@gotags: validate:"required,oneof=Ship Station Command"
  string role = 3[(google.api.field_behavior) = REQUIRED];
}

message SignupResponse {
  Token token = 1;
  string error = 2;
}


message Token {
  string token =1;
  int64 expires_at =2;
}


message ServiceStatusRequest {}

message ServiceStatusResponse {
  int64 code = 1;
  string err = 2;
}