version: '3'

services:
  # authsvc:
  #   image: golang:1.17 
  #   environment: 
  #     - F3_API_ENDPOINT=http://accountapi:8080
  #   depends_on:
  #     - auth_dbsvc
  #   working_dir: /go/src/deblasis.net/space-traffic-control/authsvc
  #   volumes: 
  #     - ./services/authsvc:/go/src/deblasis.net/space-traffic-control/authsvc
  #   #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
  #   command: "make run"
  #   networks: 
  #     - frontend
  #     - auth_backend        
          
  # auth_dbsvc:
  #   image: golang:1.17 
  #   environment: 
  #     - F3_API_ENDPOINT=http://accountapi:8080
  #     - POSTGRES_USER=deblasis
  #     - POSTGRES_PASSWORD=deblasis_pass
  #     - POSTGRES_DB=auth 
  #   working_dir: /go/src/deblasis.net/space-traffic-control/services/auth_dbsvc
  #   depends_on:
  #     - auth_db    
  #   volumes: 
  #     - ./services/auth_dbsvc:/go/src/deblasis.net/space-traffic-control/services/auth_dbsvc
  #   #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
  #   command: "make run"
  #   networks: 
  #     - auth_backend     

  auth_db:
    image: postgres:13.4-alpine3.14
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    ports:
      - "5432:5432"
    volumes:
      - data_auth:/var/lib/postgresql/data
    networks: 
      - auth_backend      
      

#  centralcommandsvc:
#     image: golang:1.17 
#     environment: 
#       - F3_API_ENDPOINT=http://accountapi:8080
#     depends_on:
#       - centralcommand_db
#     working_dir: /go/src/deblasis.net/space-traffic-control
#     volumes: 
#       - .:/go/src/deblasis.net/space-traffic-control
#     #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
#     command: "make run"
#     networks: 
#       - frontend
#       - centralcommand_backend            
#   centralcommand_dbsvc:
#     image: golang:1.17 
#     environment: 
#       - F3_API_ENDPOINT=http://accountapi:8080
#     working_dir: /go/src/deblasis.net/space-traffic-control
#     volumes: 
#       - .:/go/src/deblasis.net/space-traffic-control
#     #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
#     command: "make run"
#     networks: 
#       - centralcommand_backend         
      
# shippingstationsvc:
#     image: golang:1.17 
#     environment: 
#       - F3_API_ENDPOINT=http://accountapi:8080
#     depends_on:
#       - shippingstation_db
#     working_dir: /go/src/deblasis.net/space-traffic-control
#     volumes: 
#       - .:/go/src/deblasis.net/space-traffic-control
#     #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
#     command: "make run"
#     networks: 
#       - frontend
#       - shippingstation_backend            
#   shippingstation_dbsvc:
#     image: golang:1.17 
#     environment: 
#       - F3_API_ENDPOINT=http://accountapi:8080
#     working_dir: /go/src/deblasis.net/space-traffic-control
#     volumes: 
#       - .:/go/src/deblasis.net/space-traffic-control
#     #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
#     command: "make run"
#     networks: 
#       - shippingstation_backend         
      
      
volumes:
  data_auth:      
  data_centralcommand:      
  data_shippingstation:      

#   accountapi:
#     image: form3tech/interview-accountapi:v1.0.0-39-gef7db03d
#     restart: on-failure
#     depends_on:
#       - postgresql
#       - vault
#     environment:
#       - VAULT_ADDR=http://vault:8200
#       - VAULT_TOKEN=8fb95528-57c6-422e-9722-d2147bcba8ed
#       - PSQL_USER=root
#       - PSQL_PASSWORD=password
#       - PSQL_HOST=postgresql
#       - PSQL_PORT=5432
#       - STACK_NAME=f3-interview-accountapi
#       - DATABASE-HOST=postgresql
#       - DATABASE-SSL-MODE=disable
#       - DATABASE-USERNAME=interview_accountapi_user
#       - DATABASE-PASSWORD=123
#     ports:
#       - 8080:8080
#     networks:
#       - backend
#       - frontend
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8080"]
#       interval: 30s
#       timeout: 10s
#       retries: 3

#   postgresql:
#     image: postgres:9.5-alpine
#     healthcheck:
#       test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
#       timeout: 45s
#       interval: 10s
#       retries: 10
#     restart: always
#     environment:
#       - POSTGRES_USER=root
#       - POSTGRES_PASSWORD=password
#     volumes:
#       - ./scripts/db:/docker-entrypoint-initdb.d/
#     networks:
#       - backend      
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready"]
#       interval: 10s
#       timeout: 5s
#       retries: 5      

#   vault:
#     image: vault:1.6.3
#     environment:
#       - SKIP_SETCAP=1
#       - VAULT_DEV_ROOT_TOKEN_ID=8fb95528-57c6-422e-9722-d2147bcba8ed
#     networks:
#       - backend  

#   integrationtester:
#     image: golang:1.17 
#     environment: 
#       - F3_API_ENDPOINT=http://accountapi:8080
#     depends_on:
#       - accountapi
#     working_dir: /go/src/f3accounts
#     volumes: 
#       - .:/go/src/f3accounts
#     #command: "./scripts/wait-for-it.sh accountapi:8080 --timeout=20 --strict -- go test -tags integration -count=1 -v -cover -race ./..."
#     command: "make integrationtests"
#     networks: 
#       - frontend          

networks: 
  auth_frontend:    
  auth_backend:
