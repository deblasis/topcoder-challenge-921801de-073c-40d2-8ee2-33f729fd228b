version: '3.6'

services:
  consul:
    image: consul:1.10.2
    ports:
      - 8300:8300
      - 8400:8400
      - 8500:8500
      - 8600:8600
    environment: 
      NODE: consul  
      CONSUL_LOCAL_CONFIG: "{'skip_leave_on_interrupt': true}"
    command: consul agent -server -bind 0.0.0.0 -node consul -client 0.0.0.0 -dns-port 53 -data-dir /consul/data -ui -bootstrap  
# -advertise $PRIVATE_IP_ADDRESS \
    # volumes:
    #   - data_consul:/data
    networks:  
      net:

  # zipkin:
  #   image: openzipkin/zipkin
  #   ports:
  #     - 9411:9411
  #   networks:
  #     - net


  apigateway:
    image: deblasis/stc_apigateway:latest
    ports:
      - 8081:8081
      - 8082:8082
    depends_on: 
      - consul
      - authsvc
    volumes:
      - ./certs:/certs
      - ./services/apigateway/app.yaml:/app.yaml
    environment: 
     DEBLASIS_BINDONLOCALHOST: "false"
     DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
     DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
     DEBLASIS_APIGATEWAY_AUTHSERVICE_GRPCENDPOINT: deblasis-v1-AuthService.service.consul:9082
     DEBLASIS_APIGATEWAY_CENTRALCOMMANDSERVICE_GRPCENDPOINT: deblasis-v1-CentralCommandService.service.consul:9482
    networks:
      net:
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - 8.8.4.4      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  auth_db:
    image: postgres:13.4-alpine3.14
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: auth
      DEBLASIS_CONSULT_HOST: consul
      DEBLASIS_CONSULT_PORT: 8500
      DEBLASIS_ZIPKINV2_URL: http://zipkin:9411/api/v2/spans
    ports:
      - "5432:5432"
    volumes:
      - data_auth:/var/lib/postgresql/data
    networks: 
      - auth_backend    
      - net  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5              


  auth_dbsvc:
    image: deblasis/stc_auth_dbsvc:latest
    ports:
      - 9181:9181
      - 9182:9182
    depends_on: 
      - consul
      - auth_db
    volumes:
      - ./certs:/certs
      - ./services/auth_dbsvc/app.yaml:/app.yaml
    environment: 
     DEBLASIS_BINDONLOCALHOST: "false"
     DEBLASIS_DB_ADDRESS: auth_db:5432
     DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
     DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
    networks:
      - net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9181/health"]
      interval: 30s
      timeout: 10s
      retries: 3      

  authsvc:
    image: deblasis/stc_authsvc:latest
    ports:
      - 9081:9081
      - 9082:9082
    depends_on: 
      - consul
      - auth_dbsvc
    volumes:
      - ./certs:/certs
      - ./services/authsvc/app.yaml:/app.yaml
      - ./certs/jwt.pem.key:/certs/jwt.pem.key
      - ./certs/jwt.pem.pub:/certs/jwt.pem.pub
    environment: 
     DEBLASIS_BINDONLOCALHOST: "false"
     DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
     DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
     DEBLASIS_JWT_PRIVKEYPATH: /certs/jwt.pem.key
     DEBLASIS_JWT_PUBKEYPATH: /certs/jwt.pem.pub
    networks:
      - net      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9081/health"]
      interval: 30s
      timeout: 10s
      retries: 3





  centralcommand_db:
    image: postgres:13.4-alpine3.14
    command: ["postgres", "-c", "log_statement=all"]
    restart: always
    environment:
      PGUSER: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: centralcommand
      DEBLASIS_CONSULT_HOST: consul
      DEBLASIS_CONSULT_PORT: 8500
      DEBLASIS_ZIPKINV2_URL: http://zipkin:9411/api/v2/spans
    ports:
      - "5433:5432"
    volumes:
      - data_centralcommand:/var/lib/postgresql/data
    networks: 
      - net  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5             
      

  centralcommand_dbsvc:
    image: deblasis/stc_centralcommand_dbsvc:latest
    ports:
      - 9381:9381
      - 9382:9382
    depends_on: 
      - consul
      - centralcommand_db
    volumes:
      - ./certs:/certs
      - ./services/centralcommand_dbsvc/app.yaml:/app.yaml
    environment: 
      DEBLASIS_BINDONLOCALHOST: "false"
      DEBLASIS_DB_ADDRESS: centralcommand_db:5432
      DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
      DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
    networks:
      - net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9381/health"]
      interval: 30s
      timeout: 10s
      retries: 3         

  centralcommandsvc:
    image: deblasis/stc_centralcommandsvc:latest
    ports:
      - 9481:9481
      - 9482:9482
    depends_on: 
      - consul
      - centralcommand_dbsvc
    volumes:
      - ./certs:/certs
      - ./services/centralcommandsvc/app.yaml:/app.yaml
    environment: 
     DEBLASIS_BINDONLOCALHOST: "false"
     DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
     DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
    networks:
      - net      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9081/health"]
      interval: 30s
      timeout: 10s
      retries: 3        


  shippingstationsvc:
    image: deblasis/stc_shippingstationsvc:latest
    ports:
      - 9281:9281
      - 9282:9282
    depends_on: 
      - consul
      - centralcommandsvc
    volumes:
      - ./certs:/certs
      - ./services/shippingstationsvc/app.yaml:/app.yaml
    environment: 
     DEBLASIS_BINDONLOCALHOST: "false"
     DEBLASIS_SSL_SERVERCERT: /certs/deblasis-stc.pem
     DEBLASIS_SSL_SERVERKEY: /certs/deblasis-stc-key.pem
    networks:
      - net      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9081/health"]
      interval: 30s
      timeout: 10s
      retries: 3             

  clessidrasvc:
    image: deblasis/stc_clessidrasvc:latest
    ports:
      - 9500:9500
    depends_on: 
      - consul
      - centralcommand_dbsvc
    volumes:
      - ./certs:/certs
      - ./services/clessidrasvc/app.yaml:/app.yaml
    environment: 
     DEBLASIS_CENTRALCOMMANDDB: centralcommand_db:5432
    networks:
      net:
    dns:
      - 127.0.0.1
      - 8.8.8.8
      - 8.8.4.4      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9500/health"]
      interval: 30s
      timeout: 10s
      retries: 3  
      
      
      
volumes:
  data_auth:      
  data_centralcommand:      
  data_shippingstation:      

  # prometheus:
  #   image: prom/prometheus
  #   depends_on:
  #     - fluentd
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   logging:
  #     driver: fluentd
  #     options:
  #       fluentd-address: localhost:24224
  #       tag: alpha.efk.prometheus
  #   networks:
  #     - net

  # grafana:
  #   image: grafana/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=password
  #   depends_on:
  #     - fluentd
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./extra/grafana_db:/var/lib/grafana grafana/grafana
  #   logging:
  #     driver: fluentd
  #     options:
  #       fluentd-address: localhost:24224

  #       tag: alpha.efk.grafana
  #   networks:
  #     - net

  # fluentd:
  #   build: ./services/fluentd
  #   depends_on:
  #     - elasticsearch
  #   volumes:
  #     - ./services/fluentd/conf:/fluentd/etc
  #   ports:
  #     - 24224:24224
  #     - 24224:24224/udp
  #   networks:
  #     - net

  # elasticsearch:
  #   image: elasticsearch:6.8.18
  #   volumes:
  #     - ./esdata:/usr/share/elasticsearch/data
  #   environment:
  #     #- bootstrap.memory_lock=true
  #     #- "ES_JAVA_OPTS=-Xms256m -Xms256m"
  #     - discovery.type=single-node
  #   expose:
  #     - 9200
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - net

  # kibana:
  #   image: kibana:6.8.18
  #   depends_on:
  #     - elasticsearch
  #     - fluentd
  #   ports:
  #     - 5601:5601
  #   logging:
  #     driver: fluentd
  #     options:
  #       fluentd-address: localhost:24224
  #       tag: alpha.efk.kibana
  #   networks:
  #     - net      







  

networks: 
  #auth_frontend:    
  auth_backend:
  centralcommand_backend:
  net:
  ##  driver: bridge

  consul_network:
    driver: bridge
    ipam:
     config:
       - subnet: 33.10.0.0/16  